let express,logger,cors;_5cc‍.w("express",[["default",["express"],function(v){express=v}]]);_5cc‍.w("morgan",[["default",["logger"],function(v){logger=v}]]);_5cc‍.w("cors",[["default",["cors"],function(v){cors=v}]]);var  http = require("http");



//import "./config/mongo.js";
//import "../../config/mongo.js";
// routes
var indexRouter = require("./routes/index.js");
var userRouter = require("./routes/user.js") ;
var chatRoomRouter = require("./routes/chatRoom.js");
var deleteRouter = require("./routes/delete.js");
// middlewares
var { decode } =  require('./middlewares/jwt.js');

const app = express();

/** Get port from environment and store in Express. */
const port = process.env.PORT || "3000";
app.set("port", port);

app.use(logger("dev"));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use("/", indexRouter);
app.use("/users", userRouter);
app.use("/room", decode, chatRoomRouter);
app.use("/delete", deleteRouter);

/** catch 404 and forward to error handler */
app.use('*', (req, res) => {
  return res.status(404).json({
    success: false,
    message: 'API endpoint doesnt exist'
  })
});

/** Create HTTP server. */
const server = http.createServer(app);
/** Listen on provided port, on all network interfaces. */
server.listen(port);
/** Event listener for HTTP server "listening" event. */
server.on("listening", () => {
  console.log(`Listening on port:: http://localhost:${port}/`)
});

